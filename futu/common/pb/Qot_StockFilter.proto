syntax = "proto2";
package Qot_StockFilter;
option java_package = "com.futu.openapi.pb";

import "Common.proto";
import "Qot_Common.proto";

// 选股使用，因为选股不分沪深
enum StockMarket 
{
    StockMarket_Unknown = 0; // 未知
    StockMarket_HK = 1; // 港股
    StockMarket_US = 2; // 美股
    StockMarket_CN = 3; // A股
};

// 简单属性
enum StockField 
{
	StockField_Unknown = 0; // 未知
	StockField_CurPrice = 1; // 最新价 例如填写[10,20]值区间
    StockField_CurPriceToHighest52WeeksRatio = 2; // (现价 - 52周最高)/52周最高，对应PC端离52周高点百分比 例如填写[0.1,2.7]值区间
    StockField_CurPriceToLowest52WeeksRatio = 3; // (现价 - 52周最低)/52周最低，对应PC端离52周低点百分比 例如填写[0.1,2.7]值区间
    StockField_HighPriceToHighest52WeeksRatio = 4; // (今日最高 - 52周最高)/52周最高，对应PC端52周新高 例如填写[0.1,2.7]值区间
    StockField_LowPriceToLowest52WeeksRatio = 5; // (今日最低 - 52周最低)/52周最低 对应PC端52周新低 例如填写[0.1,2.7]值区间
	StockField_VolumeRatio = 6; // 量比 例如填写[0.5,30]值区间
	StockField_BidAskRatio = 7; // 委比 例如填写[-20,85.01]值区间
	StockField_LotPrice = 8; // 每手价格 例如填写[40,100]值区间
	StockField_MarketVal = 9; // 市值 例如填写[1.5,20]值区间 以亿为单位
	StockField_PeAnnual = 10; // 市盈率 (静态) 例如填写[-8,65.3]值区间
    StockField_PeTTM = 11; // 市盈率TTM 例如填写[-10,20.5]值区间
    StockField_PbRate = 12; // 市净率 	例如填写[0.1,15.6]值区间
};

// 选股排序
enum SortDir
{
	SortDir_No = 0; // 不排序
	SortDir_Ascend = 1; // 升序
	SortDir_Descend = 2; // 降序
};

// 简单属性筛选
message BaseFilter 
{ 
    required int32 field = 1; // StockField 简单属性
	optional double filterMin = 2; // 区间下限，闭区间
    optional double filterMax = 3; // 区间上限，闭区间
	optional int32 sortDir = 4; // SortDir 排序方向 0:不排序，1升序，2降序
	optional bool isNoFilter = 5; // 如果这个字段不需要筛选，但是需要返回这个字段的数据，指定该字段为ture。当该字段为true时，以上四个字段无效。
};

// 简单属性数据
message BaseData 
{ 
	required int32 field = 1; // StockField 简单属性
    required double value = 2;
};

message StockData 
{
    required Qot_Common.Security security = 1; // 股票
	required string name = 2; // 名称
    repeated BaseData baseDataList = 3; // 筛选后的简单属性数据
};

message C2S
{
    required int32 begin = 1; // 数据起始点
    required int32 num =  2;  // 请求数据个数，最大200		
	required int32 market= 5; // StockMarket, 股票市场
    required Qot_Common.Security plate = 6; // 板块
	// 以下为筛选条件，可选字段，不填表示不过滤
	repeated BaseFilter baseFilterList = 7; // 简单行情过滤器
}

message S2C
{
    required bool lastPage = 1; // 是否最后一页了,false:非最后一页,还有窝轮记录未返回; true:已是最后一页
	required int32 allCount = 2; // 该条件请求所有数据的个数
    repeated StockData dataList = 3; 
}

message Request
{
	required C2S c2s = 1;
}

message Response
{
	required int32 retType = 1 [default = -400]; // RetType,返回结果
	optional string retMsg = 2;
	optional int32 errCode = 3;
	optional S2C s2c = 4;
}
